services:
  # MySQL Database (통합 DB)
  mysql:
    image: mysql:8.0
    ports:
      - "23306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: farm2Pot
      MYSQL_PASSWORD: farm2Pot
      MYSQL_DATABASE: farm2Pot
    volumes:
      - mysql-8-data:/var/lib/mysql
    networks:
      - farm2Pot-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Master
  redis-master:
    image: redis:7.0
    container_name: redis-master
    ports:
      - "26379:6379"
    volumes:
      - redis_master_data:/data
    command: >
      redis-server --appendonly yes --save "" --latency-monitor-threshold 100
    networks:
      - farm2Pot-network
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6379", "PING"]
      interval: 5s
      timeout: 2s
      retries: 10

  # Redis Readonly Replica
  redis-readonly:
    image: redis:7.0
    container_name: redis-readonly
    depends_on:
      redis-master:
        condition: service_healthy
    ports:
      - "26380:6379"
    volumes:
      - redis_readonly_data:/data
    command: >
      redis-server --appendonly yes --appendfsync everysec \
      --replicaof redis-master 6379 --replica-read-only yes \
      --latency-monitor-threshold 100
    networks:
      - farm2Pot-network
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6379", "PING"]
      interval: 5s
      timeout: 2s
      retries: 10

  # Core Service
  core-service:
    build:
      context: .
      dockerfile: apps/core/Dockerfile
    container_name: core-service
    ports:
      - "18080:18080"
    environment:
      SERVER_PORT: 18080
      SPRING_APPLICATION_NAME: core-service
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/farm2Pot
      SPRING_DATASOURCE_USERNAME: farm2Pot
      SPRING_DATASOURCE_PASSWORD: farm2Pot
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_DATA_REDIS_HOST: redis-master
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      LOGGING_LEVEL_COM_FARM2POT: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: WARN
    depends_on:
      mysql:
        condition: service_healthy
      redis-master:
        condition: service_healthy
    networks:
      - farm2Pot-network
    restart: unless-stopped

  # User Service
  user-service:
    build:
      context: .
      dockerfile: apps/user/Dockerfile
    container_name: user-service
    ports:
      - "18081:18081"
    environment:
      SERVER_PORT: 18081
      SPRING_APPLICATION_NAME: user-service
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/farm2Pot
      SPRING_DATASOURCE_USERNAME: farm2Pot
      SPRING_DATASOURCE_PASSWORD: farm2Pot
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_DATA_REDIS_HOST: redis-master
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      FARM2POT_CORE_SERVICE_URL: http://core-service:18080
      LOGGING_LEVEL_COM_FARM2POT: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: WARN

    depends_on:
      core-service:
        condition: service_started
      mysql:
        condition: service_healthy
      redis-master:
        condition: service_healthy
    networks:
      - farm2Pot-network
    restart: unless-stopped

  # Subscription Service
  subscription-service:
    build:
      context: .
      dockerfile: apps/subscription/Dockerfile
    container_name: subscription-service
    ports:
      - "18083:18083"
    environment:
      SERVER_PORT: 18083
      SPRING_APPLICATION_NAME: subscription-service
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/farm2Pot
      SPRING_DATASOURCE_USERNAME: farm2Pot
      SPRING_DATASOURCE_PASSWORD: farm2Pot
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_DATA_REDIS_HOST: redis-master
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      LOGGING_LEVEL_COM_FARM2POT: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: WARN
    depends_on:
      mysql:
        condition: service_healthy
      redis-master:
        condition: service_healthy
    networks:
      - farm2Pot-network
    restart: unless-stopped

  # Admin Service
  admin-service:
    build:
      context: .
      dockerfile: apps/admin/Dockerfile
    container_name: admin-service
    ports:
      - "18082:18082"
    environment:
      SERVER_PORT: 18082
      SPRING_APPLICATION_NAME: admin-service
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/farm2Pot
      SPRING_DATASOURCE_USERNAME: farm2Pot
      SPRING_DATASOURCE_PASSWORD: farm2Pot
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_DATA_REDIS_HOST: redis-master
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      FARM2POT_CORE_SERVICE_URL: http://core-service:18080
      LOGGING_LEVEL_COM_FARM2POT: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: WARN
    depends_on:
      core-service:
        condition: service_started
      mysql:
        condition: service_healthy
      redis-master:
        condition: service_healthy
    networks:
      - farm2Pot-network
    restart: unless-stopped

# Frontend (development mode - Vite dev server with hot reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "5173:5173"   # 로컬 호스트와 매핑
    environment:
      # 실행 모드 지정
      VITE_MODE: "production"
    networks:
      - farm2Pot-network
    depends_on:
      user-service:
        condition: service_started
    restart: unless-stopped


volumes:
  mysql-8-data:
  redis_master_data:
  redis_readonly_data:

networks:
  farm2Pot-network:
    driver: bridge
